{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,GCJE,I,MDIK,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAClB,mCAAML,EAAMI,QAAQE,KAApB,OACA,mCAAMN,EAAMI,QAAQG,MAApB,YEDKC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNdM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACMZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCLG,G,wDAvCd,aAAe,IAAD,8BACb,gBAgBAH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAfxC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IALJ,E,gEAWQ,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAOlC,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAUU,EADZ,EACYA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEpD,OACI,sBAAK9B,UAAU,MAAf,UACA,oDACE,cAAC,EAAD,CACGW,YAAY,kBACZC,aAAce,KAAKf,eAEtB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAlCVI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.63e3765e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h1> {props.monster.name} </h1>\r\n        <h2> {props.monster.email} </h2>\r\n    </div>\r\n);","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n      {props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster} />\r\n    ))}    \r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n          className='search'\r\n          type='search' \r\n          placeholder={placeholder} \r\n          onChange={handleChange}\r\n    />\r\n)\r\n\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box-component';\nimport './App.css';\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n      monsters: [],\n      searchField: ''\t\t\t\n    };\n    \n    \n  }\n  \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }));\n  }\n  \n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n\trender() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\t\treturn (\n      <div className='App'>\n      <h1> Monsters Rollodex</h1>\n        <SearchBox\n           placeholder='search monsters'\n           handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\t\t   \n\t    </div>\n\t\t);\t\t\n\t}\t\t\n}\t\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}